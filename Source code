# chatbot.py
import nltk
import json
import random
import numpy as np
import streamlit as st
from sklearn.preprocessing import LabelEncoder
from sklearn.feature_extraction.text import TfidfVectorizer
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Dense, Dropout
# Load dataset
with open("intents.json") as file:
data = json.load(file)
# Preprocessing
corpus = []
labels = []
for intent in data['intents']:
for pattern in intent['patterns']:
corpus.append(pattern)
labels.append(intent['tag'])
vectorizer = TfidfVectorizer()
X = vectorizer.fit_transform(corpus).toarray()
y = encoder.fit_transform(labels)
# Build model
model = Sequential()
model.add(Dense(128, input_shape=(X.shape[1],), activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(64, activation='relu'))
model.add(Dropout(0.3))
model.add(Dense(len(set(labels)), activation='softmax'))
model.compile(loss='sparse_categorical_crossentropy', optimizer='adam',
metrics=['accuracy'])
model.fit(X, y, epochs=200, verbose=1)
# Save model
model.save('chatbot_model.h5')
# Streamlit UI
st.title("Customer Support Chatbot")
user_input = st.text_input("Ask me anything...")
if user_input:
X_test = vectorizer.transform([user_input]).toarray()
prediction = model.predict(X_test)
intent = encoder.inverse_transform([np.argmax(prediction)])
for intent_data in data['intents']:
if intent_data['tag'] == intent[0]:
st.write(random.choice(intent_data['responses']))
